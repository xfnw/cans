From 0ea61cb45bc1f36245d31360d360307b7bbeedc6 Mon Sep 17 00:00:00 2001
From: xfnw <xfnw@riseup.net>
Date: Fri, 20 Dec 2024 12:22:05 -0500
Subject: [PATCH] add custom XFNC command to force nickchanges

---
 src/ngircd/irc-login.c | 52 ++++++++++++++++++++++++++++++++++++++++++
 src/ngircd/irc-login.h |  1 +
 src/ngircd/parse.c     |  1 +
 3 files changed, 54 insertions(+)

diff --git a/src/ngircd/irc-login.c b/src/ngircd/irc-login.c
index fb221922..e35519d6 100644
--- a/src/ngircd/irc-login.c
+++ b/src/ngircd/irc-login.c
@@ -33,6 +33,7 @@
 #include "irc.h"
 #include "irc-macros.h"
 #include "irc-write.h"
+#include "op.h"
 
 #include "irc-login.h"
 
@@ -410,6 +411,57 @@ IRC_SVSNICK(CLIENT *Client, REQUEST *Req)
 	return CONNECTED;
 }
 
+/**
+ * Handler for the IRC "XFNC" command.
+ *
+ * @param Client The client from which this command has been received.
+ * @param Req Request structure with prefix and all parameters.
+ * @return CONNECTED or DISCONNECTED.
+ */
+GLOBAL bool
+IRC_XFNC(CLIENT *Client, REQUEST *Req)
+{
+	CLIENT *from = NULL, *target;
+
+	assert(Client != NULL);
+	assert(Req != NULL);
+
+	if (Client_Type(Client) != CLIENT_SERVER
+	    && !Client_HasMode(Client, 'o'))
+		return Op_NoPrivileges(Client, Req);
+
+	/* Search the originator */
+	if (Client_Type(Client) == CLIENT_SERVER)
+		from = Client_Search(Req->prefix);
+	if (!from)
+		from = Client;
+
+	/* Search the target */
+	target = Client_Search(Req->argv[0]);
+	if (!target || Client_Type(target) != CLIENT_USER)
+		return IRC_WriteErrClient(Client, ERR_NOSUCHNICK_MSG,
+					  Client_ID(Client), Req->argv[0]);
+
+	if (Client_Conn(target) <= NONE) {
+		/* We have to forward the message to the server handling
+		 * this user; this is required to make sure all servers
+		 * in the network do follow the nick name change! */
+		return IRC_WriteStrClientPrefix(Client_NextHop(target), from,
+						"XFNC %s %s",
+						Req->argv[0], Req->argv[1]);
+	}
+
+	/* Nickname already in use? */
+	if (Client_Search(Req->argv[1])) {
+		IRC_WriteErrClient(from, ERR_NICKNAMEINUSE_MSG,
+			Client_ID(from), Req->argv[1]);
+		return CONNECTED;
+	}
+
+	Change_Nick(from, target, Req->argv[1], true);
+	return CONNECTED;
+}
+
 /**
  * Handler for the IRC "USER" command.
  *
diff --git a/src/ngircd/irc-login.h b/src/ngircd/irc-login.h
index 15be7b4c..f1d9559b 100644
--- a/src/ngircd/irc-login.h
+++ b/src/ngircd/irc-login.h
@@ -27,6 +27,7 @@ GLOBAL bool IRC_PONG PARAMS((CLIENT *Client, REQUEST *Req));
 GLOBAL bool IRC_QUIT PARAMS((CLIENT *Client, REQUEST *Req));
 GLOBAL bool IRC_QUIT_HTTP PARAMS((CLIENT *Client, REQUEST *Req));
 GLOBAL bool IRC_SVSNICK PARAMS(( CLIENT *Client, REQUEST *Req ));
+GLOBAL bool IRC_XFNC PARAMS(( CLIENT *Client, REQUEST *Req ));
 
 #endif
 
diff --git a/src/ngircd/parse.c b/src/ngircd/parse.c
index 7b5d28c2..385fcd5f 100644
--- a/src/ngircd/parse.c
+++ b/src/ngircd/parse.c
@@ -102,6 +102,7 @@ static COMMAND My_Commands[] =
 	_CMD("SQUIT", IRC_SQUIT, CLIENT_USER|CLIENT_SERVER, 2, 2, 0),
 	_CMD("STATS", IRC_STATS, CLIENT_USER|CLIENT_SERVER, 0, 2, 2),
 	_CMD("SVSNICK", IRC_SVSNICK, CLIENT_SERVER, 2, 2, 0),
+	_CMD("XFNC", IRC_XFNC, CLIENT_USER|CLIENT_SERVER, 2, 2, 0),
 	_CMD("SUMMON", IRC_SUMMON, CLIENT_USER|CLIENT_SERVER, 0, -1, 0),
 	_CMD("TIME", IRC_TIME, CLIENT_USER|CLIENT_SERVER, 0, 1, 1),
 	_CMD("TOPIC", IRC_TOPIC, CLIENT_USER|CLIENT_SERVER, 1, 2, 1),
-- 
2.47.1

